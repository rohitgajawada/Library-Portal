(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> CONTAINS() takes at least 3 arguments (3 given)"
p3
sS'layer'
p4
S'/home/rohit/Documents/itwsproject/web2py/applications/Library_Portal/controllers/default.py'
p5
sS'code'
p6
S'def index():\n    import datetime\n    thedate=datetime.date.today()\n    \n    state=0\n    if auth.user!=None and auth.user.is_admin==True:\n        state=1\n    \n    return dict(thedate=thedate, state=state)\n\ndef user():\n    return dict(form=auth())\n\ndef libreg():\n    return dict(form=auth.register())\n\ndef libadmin():\n    if auth.user!=None and auth.user.is_admin==True:\n        grid = SQLFORM.grid(db.book)\n        return dict(grid=grid)\n    else:\n        return dict()\n\ndef borrow():\n    form1=FORM(INPUT(_id=\'keyword1\', _name=\'keyword1\', _onkeyup="ajax(\'callback1\', [\'keyword1\'], \'target1\');")) \n    target_div1=DIV(_id=\'target1\')\n\n    form2=FORM(INPUT(_id=\'keyword2\', _name=\'keyword2\', _onkeyup="ajax(\'callback2\', [\'keyword2\'], \'target2\');")) \n    target_div2=DIV(_id=\'target2\')\n\n    form3=FORM(INPUT(_id=\'keyword3\', _name=\'keyword3\', _onkeyup="ajax(\'callback3\', [\'keyword3\'], \'target3\');")) \n    target_div3=DIV(_id=\'target3\')\n\n    return locals()\n\ndef callback1():\n    query = db.book.title.contains(request.vars.keyword)\n    books = db(query).select(orderby=db.book.title)\n    links = [A(b.title, _href=URL(\'show\',args=b.id)) for b in books]\n    return UL(*links)\n\ndef callback2():\n    query = db.book.author.contains(request.vars.keyword)\n    books = db(query).select(orderby=db.book.author)\n    links = [A(b.author, _href=URL(\'show\',args=b.id)) for b in books]\n    return UL(*links)\n\ndef callback3():\n    query = db.book.genre.contains(request.vars.keyword)\n    books = db(query).select(orderby=db.book.genre)\n    links = [A(b.genre, _href=URL(\'show\',args=b.id)) for b in books]\n    return UL(*links)\n\n@cache.action()\ndef download():\n    return response.download(request, db)\n\ndef call():\n    return service()\n\nresponse._vars=response._caller(callback1)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/rohit/Documents/itwsproject/web2py/applications/Library_Portal/controllers/default.py", line 61, in <module>\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/rohit/Documents/itwsproject/web2py/applications/Library_Portal/controllers/default.py", line 38, in callback1\n    books = db(query).select(orderby=db.book.title)\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/packages/dal/pydal/objects.py", line 2025, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 124, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1280, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1167, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/home/rohit/Documents/itwsproject/web2py/gluon/packages/dal/pydal/adapters/base.py", line 954, in expand\n    rv = op(first, **optional_args)\nTypeError: CONTAINS() takes at least 3 arguments (3 given)\n'
p11
s.